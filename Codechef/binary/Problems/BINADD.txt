
Read problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.
Recently, Chef studied the binary numeral system and noticed that it is extremely simple to perform bitwise operations like AND, XOR or bit shift on non-negative integers, while it is much more complicated to perform arithmetic operations (e.g. addition, multiplication or division).
After playing with binary operations for a while, Chef invented an interesting algorithm for addition of two non-negative integers AA and BB:
function add(A, B):
    while B is greater than 0:
        U = A XOR B
        V = A AND B
        A = U
        B = V * 2
    return A

Now Chef is wondering how fast this algorithm is. Given the initial values of AA and BB (in binary representation), he needs you to help him compute the number of times the while-loop of the algorithm is repeated.
Input

The first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.
The first line of each test case contains a single string AA.
The second line contains a single string BB.

Output
For each test case, print a single line containing one integer ― the number of iterations the algorithm will perform during addition of the given numbers AA and BB.
Constraints

1≤T≤1051≤T≤105
1≤|A|,|B|≤1051≤|A|,|B|≤105
AA and BB contain only characters '0' and '1'
the sum of |A|+|B||A|+|B| over all test cases does not exceed 106106

Subtasks
Subtask #1 (20 points): |A|,|B|≤30|A|,|B|≤30
Subtask #2 (30 points):

|A|,|B|≤500|A|,|B|≤500
the sum of |A|+|B||A|+|B| over all test cases does not exceed 105105

Subtask #3 (50 points): original constraints

                        Sample Input 1
                        





3
100010
0
0
100010
11100
1010



                        Sample Output 1
                        





0
1
3


Explanation
Example case 1: The initial value of BB is 00, so while-loop is not performed at all.
Example case 2: The initial values of AA and BB are 02=002=0 and 1000102=341000102=34 respectively. When the while-loop is performed for the first time, we have:

U=34U=34
V=0V=0
AA changes to 3434
BB changes to 2⋅0=02⋅0=0

The while-loop terminates immediately afterwards, so it is executed only once.
Example case 3: The initial values of AA and BB are 111002=28111002=28 and 10102=1010102=10 respectively. After the first iteration, their values change to 2222 and 1616 respectively. After the second iteration, they change to 66 and 3232, and finally, after the third iteration, to 3838 and 00.



Author:
7★alex_2oo8


Editorial:
https://discuss.codechef.com/problems/BINADD


Tags:

               
                 String, Bitwise Operation, Binary
                 
                     
                     Data Structures, Mathematics, Bit Manipulation, Number System
                 
               
             
             



                        Difficulty Rating:
                    

1927


Date Added:
4-12-2019


Time Limit:
1 secs


Source Limit:
50000 Bytes


Languages:
PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM





Submit

